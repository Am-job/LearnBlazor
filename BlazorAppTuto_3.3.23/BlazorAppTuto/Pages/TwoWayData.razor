@page "/twoWay"
@using Microsoft.JSInterop

<h3>TwoWayData</h3>

<p>
    Enter Your Name: <input type="text" @bind="Name"/> <br />
    What is your age: <input type="number" @bind="Age"/> <br />
    What is your Salery? <input type="number" @bind="Salary" /><br />

    What is your birthday (culture-invariant default format)? <input type="date" @bind="Birthday" /><br />
    What is your birthday (German date format)? <input type="datetime-local" @bind="Birthday" format-value="dd.MM.yyyy" /><br />

    Are you a manager? <input type="checkbox" @bind="IsManager"/><br />

    @* Select *@
    <select id="select-box" @bind="TypeOfEmployee">
        <option value=@EmployeeType.Employee>@EmployeeType.Employee.ToString()</option>
        <option value=@EmployeeType.Contractor>@EmployeeType.Contractor.ToString()</option>
        <option value=@EmployeeType.Intern>@EmployeeType.Intern.ToString()</option>
    </select>

    @* Checkbox *@
    <input type="checkbox" @bind="IsChecked" /> <br/>

    @* Radio *@
    <input type="radio" name="color" value="red" @onchange="@(() => SelectedColor = "red")" checked="@(SelectedColor == "red")" /> Red
    <input type="radio" name="color" value="blue" @onchange="@(() => SelectedColor = "blue")" checked="@(SelectedColor == "blue")"/> Blue
    
    <br/>

    <button @onclick="showData">Submit</button>
</p>

<h2>Hello, @Name!</h2>

<p>You are @Age years old. You are born on the @Birthday. You are @TypeOfEmployee.</p>

@if (IsManager)
{
    <p>You are a manager!</p>
}

<p>Your salary is $@Salary</p>

<p>@IsChecked</p>

<p>@SelectedColor</p>

@code {
    private enum EmployeeType { Employee, Contractor, Intern };
    private EmployeeType TypeOfEmployee { get; set; } = EmployeeType.Employee;

    private string? Name { get; set; }
    private bool IsManager { get; set; } = false;
    private bool IsChecked { get; set; } = false;
    private static int Age { get; set; } = 26;
    private string SelectedColor { get; set; } = string.Empty;
    public DateTime Birthday { get; set; } = DateTime.Today.AddYears(-Age);

    public decimal Salary { get; set; } = (decimal) 2800.5;

    [Inject]
    private IJSRuntime jsRuntime { get; set; }

    protected async Task showData()
    {
        await jsRuntime.InvokeVoidAsync("console.log", $"{Name}, {IsManager}, {Age}, {SelectedColor}, {Birthday}, {Salary}");
    }
}
