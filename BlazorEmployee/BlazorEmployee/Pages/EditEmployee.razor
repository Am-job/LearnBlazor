@page "/editEmployee"
@inject GetData data
@inject NavigationManager navigate
@using BlazorEmployee.Modals

<HeaderBackComponent IsBackAble="@IsBackAble" ButtonTitle="Back">@Title Employee</HeaderBackComponent>
<FormComponent Data="@EmployeeForm" Invalid="Invalid" Submit="HandleSubmit" PageTitle="@Title" IsDisabled="@IsDisabled"></FormComponent>

@code {
    [SupplyParameterFromQuery]
    [Parameter]
    public int Id { get; set; } 

    public bool IsBackAble { get; set; } = true;
    public bool IsDisabled { get; set; } = false;
    public string? Title { get; set; }

    public Employee? EmployeeForm { get; set; } = new Employee()
        {
            Name = "",
            Dob = DateOnly.FromDateTime(DateTime.Now),
            ID = new Random().Next(0, 100000000),
            JoinDate = DateTime.Now,
            Position = "",
            Salary = 0
        };

    protected override void OnInitialized()
    {
        if(Id >= 1)
        {
            EmployeeForm = data.clone().Find(p => p.ID == Id); // find , clone
            IsDisabled = true;
            Title = "Edit";
        }
        else
        {
            Title = "Add";
        }

    }

    public void HandleSubmit(Employee employee)
    {
        if(Id >= 1)
        {
            data.UpdateEmployee(employee, employee.ID);
            navigate.NavigateTo("/");
        }
        else
        {
            data.UpdateEmployee(employee, employee.ID);
            navigate.NavigateTo("/");
        }
    }

    public void Invalid()
    {
        IsBackAble = !IsBackAble;
    }
}
