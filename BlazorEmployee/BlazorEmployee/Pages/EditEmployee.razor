@page "/editEmployee"
@inject GetData data
@inject NavigationManager navigate
@using BlazorEmployee.Modals
@inject ModalService editEvent

@if(isEditView == true)
{
    <HeaderBackComponent IsBackAble="@IsBackAble" ButtonTitle="Back">@Title Employee</HeaderBackComponent>
}

<FormComponent Data="@EmployeeForm" Invalid="Invalid" Submit="HandleSubmit" PageTitle="@Title" IsDisabled="@IsDisabled"></FormComponent>

@code {
    [SupplyParameterFromQuery]
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public bool isEditView { get; set; } = true;

    public bool IsBackAble { get; set; } = true;
    public bool IsDisabled { get; set; } = false;
    public string? Title { get; set; }

    public Employee? EmployeeForm { get; set; } = new Employee()
        {
            Name = "",
            Dob = DateOnly.FromDateTime(DateTime.Now),
            ID = new Random().Next(0, 100000000),
            JoinDate = DateTime.Now,
            Position = "",
            Salary = 0
        };

    protected override void OnInitialized()
    {
        if(Id >= 1)
        {
            var employee = data.Employees.Find(p => p.ID == Id);
            EmployeeForm = employee!.ShallowCopy();
            IsDisabled = true;
            Title = "Edit";
        }
        else
        {
            Title = "Add";
        }

    }

    public void HandleSubmit(Employee employee)
    {

        data.UpdateEmployee(employee);
        navigate.NavigateTo("/");
        editEvent.NotifyStateChanged("Edit", employee);
    }

    public void Invalid()
    {
        IsBackAble = !IsBackAble;
    }
}
