@*Form Control and Handle Submit*@

<div class="row">
<EditForm Model="@Data" OnValidSubmit="HandleSubmit" OnInvalidSubmit="HandleInvalid" class="mx-auto col-md-10 col-12 my-2 row">
    <DataAnnotationsValidator />
    <div class="mb-3 col-lg-6 col-12">
        <label for="Name" class="form-label">Name</label>
        <input type="text" readonly="@IsDisabled" class="form-control" id="Name" @bind-value="Data.Name">
        <ValidationMessage For="@(() => Data.Name)" />
    </div>
        <div class="mb-3 mt-lg-auto mt-3 col-lg-6 col-12">
        <select class="form-control" @bind="Data.Position" disabled="@IsDisabled">
                <option value="" disabled selected>-- Select Employee' Position --</option>
                <option value="Manager">Manager</option>
                <option value="Senior">Senior</option>
                <option value="Junior">Junior</option>
        </select>
            <ValidationMessage For="@(() => Data.Position)" />
    </div>
        <div class="mb-3 col-lg-6 col-12">
        <label for="Dob" class="form-label">Date Of Birth</label>
        <input type="date" readonly="@IsDisabled" class="form-control" id="Dob" @bind-value="Data.Dob">
            <ValidationMessage For="@(() => Data.Dob)" />
    </div>
        <div class="mb-3 col-lg-6 col-12">
        <label for="Salary" class="form-label">Salary</label>
        <input type="number" readonly="@IsDisabled" class="form-control" id="Salary" @bind-value="Data.Salary">
            <ValidationMessage For="@(() => Data.Salary)" />
    </div>
        <div class="mb-3 col-lg-6 col-12">
        <label for="JoinDate" class="form-label">Join Date</label>
        <input type="datetime-local" readonly="@IsDisabled" class="form-control" id="JoinDate" @bind-value="Data.JoinDate">
        <ValidationMessage For="@(() => Data.JoinDate)" />
    </div>
@if (!IsDisabled)
{
    <div class="mb-3 col-md-8 col-6 mt-3 mx-auto d-flex justify-content-center">
         <button type="submit" class="btn btn-primary px-4 me-2">Submit</button>
                @if (PageTitle == "Edit")
                {
                    <button @onclick="HandleToggle" class="btn btn-dark px-4">Cancle</button>
                }
    </div>
}
else
{
    <div class="mb-3 col-md-8 col-6 mt-3 mx-auto d-flex justify-content-center">
         <button @onclick="HandleToggle" class="btn btn-dark px-5">Edit</button>
    </div>
}

</EditForm>
</div>

@code {
    [Parameter]
    public Employee? Data { get; set; }

    [Parameter]
    public EventCallback<Employee> Submit { get; set; }

    [Parameter]
    public EventCallback<Employee> Invalid { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; } = false;

    [Parameter]
    public string? PageTitle { get; set; }

    [SupplyParameterFromQuery]
    [Parameter]
    public int Id { get; set; }

    public async void HandleSubmit()
    {
        await Submit.InvokeAsync(Data);
    }

    public async void HandleInvalid()
    {
        await Invalid.InvokeAsync();
    }

    public void HandleToggle()
    {
        IsDisabled = !IsDisabled;
    }
}
